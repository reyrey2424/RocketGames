{"version":3,"file":"index.js","sources":["../src/snapshot.ts","../src/Client.ts","../src/md5.ts","../src/splitHeaderUtil.ts","../src/V3.ts"],"sourcesContent":["// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n\nexport const WebSocketFields = {\n\tprototype: {\n\t\tsend: WebSocket.prototype.send,\n\t},\n\tCLOSED: WebSocket.CLOSED,\n\tCLOSING: WebSocket.CLOSING,\n\tCONNECTING: WebSocket.CONNECTING,\n\tOPEN: WebSocket.OPEN,\n};\n","import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocketMeta,\n} from \"./BareTypes.js\";\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport type MetaCallback = (meta: BareWebSocketMeta) => void;\nexport type ReadyStateCallback = (readyState: number) => void;\nexport type WebSocketImpl = {\n\tnew(...args: ConstructorParameters<typeof WebSocket>): WebSocket;\n};\nexport type GetRequestHeadersCallback = () => Promise<BareHeaders>;\n\nexport abstract class Client {\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n","/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\nreturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\t\nreturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = \"\";\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\t\nreturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\t\nreturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\t\nreturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = \"0123456789abcdef\";\n\tlet output = \"\";\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\t\nreturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\t\nreturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\t\nreturn rawHMACMD5(key, string);\n}\n","import { BareError } from \"./Client\";\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has(\"x-bare-headers\")) {\n\t\tconst value = headers.get(\"x-bare-headers\")!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete(\"x-bare-headers\");\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = \"x-bare-headers\";\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join: string[] = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(\";\")) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: \"INVALID_BARE_HEADER\",\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: \"Value didn't begin with semi-colon.\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(\"\"));\n\t}\n\n\treturn output;\n}\n","import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n} from \"./BareTypes.js\";\nimport { BareError, Client, statusEmpty } from \"./Client.js\";\nimport type {\n\tReadyStateCallback,\n\tMetaCallback,\n\tGetRequestHeadersCallback,\n} from \"./Client.js\";\nimport type {\n\tBareResponseHeaders,\n\tSocketClientToServer,\n\tSocketServerToClient,\n} from \"./V3Types.js\";\nimport md5 from \"./md5.js\";\nimport { WebSocketFields } from \"./snapshot.js\";\nimport { joinHeaders, splitHeaders } from \"./splitHeaderUtil.js\";\nimport type { BareTransport, TransferrableResponse } from \"@mercuryworkshop/bare-mux\";\n\nexport default class ClientV3 extends Client implements BareTransport {\n\tws: URL;\n\thttp: URL;\n\n\tmeta() {\n\t\treturn {};\n\t}\n\tconstructor(server: URL) {\n\t\tsuper(3, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\n\t\tif (this.ws.protocol === \"https:\") {\n\t\t\tthis.ws.protocol = \"wss:\";\n\t\t} else {\n\t\t\tthis.ws.protocol = \"ws:\";\n\t\t}\n\t}\n\tready = true;\n\tasync init() {\n\t\tthis.ready = true;\n\t}\n\tconnect(\n\t\turl: URL,\n\t\tprotocols: string[],\n\t\trequestHeaders: BareHeaders,\n\t\tonopen: (protocol: string) => void,\n\t\tonmessage: (data: Blob | ArrayBuffer | string) => void,\n\t\tonclose: (code: number, reason: string) => void,\n\t\tonerror: (error: string) => void,\n\t): [ (data: Blob | ArrayBuffer | string) => void, (code: number, reason: string) => void ] {\n\t\tconst ws = new WebSocket(this.ws);\n\n\t\trequestHeaders[\"Host\"] = url.host; \n\t\trequestHeaders[\"Upgrade\"] = \"websocket\";\n\t\trequestHeaders[\"Connection\"] = \"Upgrade\";\n\n\t\tconst cleanup = () => {\n\t\t\tws.removeEventListener(\"close\", closeListener);\n\t\t\tws.removeEventListener(\"message\", messageListener);\n\t\t};\n\n\t\tconst messageListener = (event: MessageEvent) => {\n\t\t\tcleanup();\n\n\t\t\t// ws.binaryType is irrelevant when sending text\n\t\t\tif (typeof event.data !== \"string\")\n\t\t\t\tthrow new TypeError(\"the first websocket message was not a text frame\");\n\n\t\t\tconst message = JSON.parse(event.data) as SocketServerToClient;\n\n\t\t\t// finally\n\t\t\tif (message.type !== \"open\")\n\t\t\t\tthrow new TypeError(\"message was not of open type\");\n\n\t\t\t// onMeta({\n\t\t\t// \tprotocol: message.protocol,\n\t\t\t// \tsetCookies: message.setCookies,\n\t\t\t// });\n\n\n\t\t\tonopen(message.protocol);\n\n\t\t\tws.addEventListener(\"message\", (ev) => {\n\t\t\t\tonmessage(ev.data);\n\t\t\t});\n\n\t\t\tws.addEventListener(\"close\", (ev) => {\n\t\t\t\tonclose(ev.code, ev.reason)\n\t\t\t});\n\t\t};\n\n\t\tconst closeListener = (event: CloseEvent) => {\n\t\t\tonclose(event.code, event.reason)\n\t\t\tcleanup();\n\t\t};\n\n\t\tws.addEventListener(\"message\", messageListener);\n\t\tws.addEventListener(\"close\", closeListener);\n\n\t\t// CONNECTED TO THE BARE SERVER, NOT THE REMOTE\n\t\tws.addEventListener(\n\t\t\t\"open\",\n\t\t\t(event) => {\n\t\t\t\tWebSocketFields.prototype.send.call(\n\t\t\t\t\tws,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\ttype: \"connect\",\n\t\t\t\t\t\tremote: url.toString(),\n\t\t\t\t\t\tprotocols,\n\t\t\t\t\t\theaders: requestHeaders,\n\t\t\t\t\t\tforwardHeaders: [],\n\t\t\t\t\t} as unknown as SocketClientToServer)\n\t\t\t\t)\n\t\t\t},\n\t\t\t// only block the open event once\n\t\t\t{ once: true }\n\t\t);\n\n\n\t\treturn [ ws.send.bind(ws), ws.close.bind(ws) ]\n\t}\n\tasync request(\n\t\tremote: URL,\n\t\tmethod: BareMethod,\n\t\tbody: BodyInit | null,\n\t\theaders: BareHeaders,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<TransferrableResponse> {\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: \"omit\",\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t\t//@ts-expect-error this exists but isnt typed ig\n\t\t\tduplex: \"half\"\n\t\t};\n\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\tif (\"host\" in headers) headers.host = remote.host;\n\t\telse headers.Host = remote.host;\n\t\toptions.headers = this.createBareHeaders(remote, headers);\n\n\t\tconst response = await fetch(\n\t\t\tthis.http + \"?cache=\" + md5(remote.toString()),\n\t\t\toptions\n\t\t);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\t\t\n\t\treturn {\n\t\t\tbody: response.body!,\n\t\t\theaders: readResponse.headers,\n\t\t\tstatus: readResponse.status,\n\t\t\tstatusText: readResponse.statusText,\n\t\t};\n\t}\n\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: Partial<BareResponseHeaders> = {};\n\n\t\tconst xBareStatus = responseHeaders.get(\"x-bare-status\");\n\t\tif (xBareStatus !== null) result.status = parseInt(xBareStatus);\n\n\t\tconst xBareStatusText = responseHeaders.get(\"x-bare-status-text\");\n\t\tif (xBareStatusText !== null) result.statusText = xBareStatusText;\n\n\t\tconst xBareHeaders = responseHeaders.get(\"x-bare-headers\");\n\t\tif (xBareHeaders !== null) result.headers = JSON.parse(xBareHeaders);\n\n\t\treturn result as BareResponseHeaders;\n\t}\n\tcreateBareHeaders(\n\t\tremote: URL,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set(\"x-bare-url\", remote.toString());\n\t\theaders.set(\"x-bare-headers\", JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append(\"x-bare-forward-headers\", header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append(\"x-bare-pass-headers\", header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append(\"x-bare-pass-status\", status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n"],"names":[],"mappings":"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"}